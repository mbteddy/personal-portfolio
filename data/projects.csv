project,description,class-page,url,src,github
Getting Started with git,"This our first challenge for the quarter where we learned how to use Github and git to update and save our work. The objectives of this challenge were learning how to fork a repository on Github, clone the repository to our local machine, Write a very basic HTML page, using git to add new files and updates to already existing files, and deploying our respository to our student web server. This challenge served as a good introduction to the class because throughout the quarter, I have used git and Github quite a bit so having a solid foundation was extremely important moving forward.",https://faculty.washington.edu/mikefree/info343/#/challenges/git,https://staff.washington.edu/mbteddy/info343/git-started/,img/git-started.png,https://github.com/mbteddy/git-started
Core HTML and CSS Concepts,"Our second assignment of the quarter involved using HTML and CSS to create a home and order page for the new fictitious caf≈Ω on the Ave called Dawg Coffee. We also developed the site so that it respond well to different sized screens using Bootstrap developed by Twitter. The main purpose of this challenge was to expose us to the many built-in functionalities associated with HTML elements and CSS styles. This project was really fun because it taught us to develop our applications with the ""mobile first"" mindset. Since a lot of users are browsing the web using devices with small screens, it is important that our websites are able to properly resize to their device's screen size and can display content proportionately.",https://faculty.washington.edu/mikefree/info343/#/challenges/responsive	,https://staff.washington.edu/mbteddy/info343/dawg-coffee/,img/dawg-coffee.png,https://github.com/mbteddy/dawg-coffee
Mapping Police Shootings with Leaflet.js,"This challenge introduced us how to use JavaScript to manipulate data and learn how to implement a JavaScript library. JavaScript is a language that can be manipulated very easily so this challenge was a great introduction how JavaScript is used in modern web development. One of the major aspects of this project was learning how to get familiar with a library by ourselves using resources like the library documentation and being able to Google Stack Overflow questions. In this exercise, we created an interactive map of crowdsourced police shootings data from Deadspin. Each shooting was represented by an object in a JSON file and placed on a Map of the United States. They were categorized by severity of the shooting and when clicked, each shooting would display a summary, location, and a link to the article about it. I also created a cross tabulation to show statistical information about the data",https://faculty.washington.edu/mikefree/info343/#/challenges/map-challenge	,http://staff.washington.edu/mbteddy/info343/police-shooting/,img/leaflet.png	,https://github.com/mbteddy/police-shooting
Build a CRUD Web Application,"The objective of this challenge was for us to create a read/write web application or a CRUD (create, read, update, and delete) application. Up to this point, we only created read-only applications or ones where our users could only read data and not create new data and save it back to the server for it to store. For this application we were introduced to Parse, a data storage application and used its JavaScript library to interact with our application and store data created by users. For this assignment, I created a Fallout 4 Review page that allowed users to create reviews for the game and upvote and downvote reviews depending on how helpful they were. It also showed the average rating for the game and it was updated every time a new review was created.",https://faculty.washington.edu/mikefree/info343/#/challenges/crud	,https://staff.washington.edu/mbteddy/info343/crud-application/        ,img/crud-app.png	,https://github.com/mbteddy/CaliBurger
Spotfiy Challenge,"This challenge introduced me to Angular.js and access data from an API, specifically the Spotify API. The objectives for this challenge were use Angular.js directives and expressions in our HTML to get and show data, create Angular.js modules and controllers in my JavaScript files so Angular can communicate with our HTML, and use API and Angular's $http service to get data from a web application. One really difficult aspect of this project was learning how to communicate with Spotfiy. My application allowed users to search for an artist and returns the current Top 10 Tracks for the top match from their search query in the United States. The application would display the album art and a link to the Artist's Spotify page and if the user clicked on the album art, it would play a preview for the track.",https://faculty.washington.edu/mikefree/info343/#/challenges/spotify	,https://staff.washington.edu/mbteddy/info343/spotify-challenge/        ,img/spotify.png,https://github.com/mbteddy/spotifyApp